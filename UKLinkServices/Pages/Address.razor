@page "/address"
@using Microsoft.Extensions.Logging
@inject ILogger<Address> Logger
@inject NavigationManager NavigationManager
    <EditForm Model="@search" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-sm-4">
                dfg
            </div>
        </div>
    </EditForm>
    @code{

        private string currentUrl;

        Models.Search search = new Models.Search()
        {
            SearchType = "MPRN" // default value
        };
        List<string> rdOptions = new List<string> { "MPRN", "Address" };
        string message = "Search page loaded!";
        string messageType = "";

        protected override void OnInitialized()
        {
            currentUrl = NavigationManager.Uri;
        }

        private void HandleValidSubmit()
        {
            try
            {
                Logger.LogInformation("HandleValidSubmit called");
                message = "Successfully created network details.";
                messageType = "success";
                StateHasChanged();
            }
            catch (Exception ex)
            {
                message = ex.ToString();
                messageType = "error";
            }
        }

        protected void HandleInvalidSubmit()
        {
            messageType = "validation";
            message = DateTime.Now + " Handle invalid submit";
        }
    }