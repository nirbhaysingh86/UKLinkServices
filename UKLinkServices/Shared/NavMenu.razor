@inject HttpClient Http
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">UKLinkServices</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>
@if (roleId != null)
{
    <p style="background-color:red">Hello @roleId</p>

}
else
{
<p style="background-color:forestgreen">Hello pyar</p>
}
<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @if (leftNavs == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <ul class="nav flex-column">

            @foreach (var leftNav in leftNavs)
            {
                <li class="nav-item px-3">
                    @if (leftNav.href == "")
                    {
                        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                            <span class="@leftNav.className" aria-hidden="true"></span> @leftNav.menuName
                        </NavLink>}
                    else
                    {

                        <NavLink class="nav-link" href="@leftNav.href">
                            <span class="@leftNav.className" aria-hidden="true"></span> @leftNav.menuName
                        </NavLink>

                    }
                </li>
            }

        </ul>
    }
</div>

@code {
    private bool collapseNavMenu = true;

    private LeftNavMenu[] leftNavs;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [Parameter]
    public string roleId { get; set; }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        leftNavs = await Http.GetFromJsonAsync<LeftNavMenu[]>("sample-data/left-nav-menu.json");

    }

     

    void onclick(string selectedroleId)
    {
        if (selectedroleId != null)
        {
            roleId = selectedroleId;
        }
    }
}
